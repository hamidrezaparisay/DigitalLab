$date
	Sat May 22 03:16:47 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module full_adder_test $end
$var wire 4 ! result0 [3:0] $end
$var wire 1 " c_out0 $end
$var reg 4 # a0 [3:0] $end
$var reg 4 $ b0 [3:0] $end
$var reg 1 % c_in0 $end
$scope module f $end
$var wire 4 & a [3:0] $end
$var wire 4 ' b [3:0] $end
$var wire 1 % c_in $end
$var wire 4 ( result [3:0] $end
$var wire 5 ) c_out_temp [4:0] $end
$var wire 1 " c_out $end
$scope begin make_hadders[0] $end
$scope module s $end
$var wire 1 * a $end
$var wire 1 + b $end
$var wire 1 , c_in $end
$var wire 1 - c_out $end
$var wire 1 . result $end
$upscope $end
$upscope $end
$scope begin make_hadders[1] $end
$scope module s $end
$var wire 1 / a $end
$var wire 1 0 b $end
$var wire 1 1 c_in $end
$var wire 1 2 c_out $end
$var wire 1 3 result $end
$upscope $end
$upscope $end
$scope begin make_hadders[2] $end
$scope module s $end
$var wire 1 4 a $end
$var wire 1 5 b $end
$var wire 1 6 c_in $end
$var wire 1 7 c_out $end
$var wire 1 8 result $end
$upscope $end
$upscope $end
$scope begin make_hadders[3] $end
$scope module s $end
$var wire 1 9 a $end
$var wire 1 : b $end
$var wire 1 ; c_in $end
$var wire 1 < c_out $end
$var wire 1 = result $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
x=
x<
x;
x:
x9
x8
x7
x6
x5
x4
x3
x2
x1
x0
x/
x.
x-
x,
x+
x*
bx )
bx (
bx '
bx &
x%
bx $
bx #
x"
bx !
$end
#10
0=
0;
07
13
18
1"
11
06
1<
1-
02
b110 !
b110 (
0.
1,
0+
00
15
1:
1*
0/
04
19
b10011 )
1%
b1100 $
b1100 '
b1001 #
b1001 &
#15
